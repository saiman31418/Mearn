{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp.LAPTOP-QQAB2BRR\\\\Downloads\\\\MSWD-master (1)\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport './index.css';\nimport Form from './components/persondata';\nimport person from './service/person';\nimport Persons from './components/Persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [Phonenumber, setPhn] = useState('');\n  const [searchName, setSearchName] = useState('');\n  const [message, setMessage] = useState(null);\n  const [type, setType] = useState('');\n  const focusName = useRef();\n  useEffect(() => {\n    person.getAll().then(setPersons);\n    console.log(persons);\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const existingPerson = persons.find(person => person.name === newName);\n\n    if (existingPerson) {\n      window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) && person.update(existingPerson.id, {\n        number: Phonenumber,\n        name: newName\n      }).then(updatedPerson => {\n        setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person));\n        setMessage(`Updated ${newName}'s number`);\n        setType('info');\n        setNewName('');\n        setPhn('');\n        focusName.current.focus();\n      }).catch(error => {\n        if (error.name === 'TypeError') {\n          setMessage(`Information of ${newName} has already been deleted`);\n          {\n            console.log(persons);\n          }\n          setPersons(persons.filter(person => person.id !== existingPerson.id));\n        } else {\n          setMessage(error.response.data.error);\n        }\n\n        setType('error');\n      });\n    } else {\n      person.create(newName, Phonenumber).then(newPerson => {\n        setPersons(persons.concat(newPerson));\n        setMessage(`Added ${newName}`);\n        setType('info');\n        setNewName('');\n        setPhn('');\n        console.log(persons);\n      });\n    }\n  };\n\n  const Notification = ({\n    message,\n    type,\n    setMessage,\n    setType\n  }) => {\n    _s();\n\n    useEffect(() => {\n      if (message) {\n        const timer = setTimeout(() => {\n          setMessage(null);\n          setType('');\n        }, 5000);\n        return () => clearTimeout(timer);\n      }\n    }, [message]);\n    return message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: type,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  _s(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      person.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id));\n        setMessage(`Deleted ${name}`);\n        setType('info');\n      });\n    }\n  };\n\n  const handlename = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handlenumber = event => {\n    console.log(event.target.value);\n    setPhn(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: \"text-align: center;\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      type: type,\n      setMessage: setMessage,\n      setType: setType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Search by name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchName,\n        onChange: event => setSearchName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addNote: addNote,\n      newName: newName,\n      handlename: handlename,\n      handlenumber: handlenumber,\n      focusName: focusName,\n      Phonenumber: Phonenumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: persons,\n      searchName: searchName,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"fLx/QVJ3gH590JRt/QGFYAOs6nw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hp.LAPTOP-QQAB2BRR/Downloads/MSWD-master (1)/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","useRef","Form","person","Persons","App","persons","setPersons","newName","setNewName","Phonenumber","setPhn","searchName","setSearchName","message","setMessage","type","setType","focusName","getAll","then","console","log","addNote","event","preventDefault","existingPerson","find","name","window","confirm","update","id","number","updatedPerson","map","current","focus","catch","error","filter","response","data","create","newPerson","concat","Notification","timer","setTimeout","clearTimeout","deletePerson","remove","handlename","target","value","handlenumber"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState,useEffect,useRef } from 'react'\n\nimport './index.css';\nimport Form from './components/persondata'\nimport person from './service/person'\nimport Persons from './components/Persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('') \n  const [Phonenumber,setPhn]=useState('')\n  const [ searchName, setSearchName ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ type, setType ] = useState('');\n  const focusName = useRef();\n  \n  \n\n  useEffect(() => {\n    person.getAll()\n    .then(setPersons);\n    console.log(persons)\n  }, []);\n  \n  const addNote = event => {\n    event.preventDefault()\n   const existingPerson=persons.find(person=>person.name === newName);\n\n   if(existingPerson){\n   window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) &&\n    person.update(existingPerson.id,{number:Phonenumber,name:newName})\n    .then(updatedPerson=>{\n      setPersons(persons.map(person=>person.id === updatedPerson.id ? updatedPerson : person));\n\n      setMessage(`Updated ${newName}'s number`);\n      setType('info');\n      setNewName('');\n      setPhn('');\n      focusName.current.focus();    \n    })\n    .catch(error=>{\n      if(error.name ==='TypeError'){\n        setMessage(`Information of ${newName} has already been deleted`);\n        {console.log(persons)}\n        setPersons(persons.filter(person=>person.id !== existingPerson.id));\n\n      }\n      else{\n        setMessage(error.response.data.error);\n      }\n      setType('error');\n\n    });\n   }\nelse{\n    \n    person.create(newName,Phonenumber)\n    .then(newPerson=>{\n      setPersons(persons.concat(newPerson));\n      setMessage(`Added ${newName}`);\n      setType('info');\n      setNewName('')\n    setPhn('')\n      \n    console.log(persons) \n\n    })\n   \n  }\n    \n};\n\n\nconst Notification = ({message, type, setMessage, setType}) => {\n\n \n  useEffect(() => {\n      if (message) {\n          const timer = setTimeout(() => {\n              setMessage(null);\n              setType('');\n          }, 5000);\n          return () => clearTimeout(timer);\n      }\n     \n  }, [message]);\n\n  return (\n      message ?\n      <div className={type}>\n          {message}\n      </div>\n      :\n      null\n  );\n};\nconst deletePerson=(id,name)=>{\n  if(window.confirm(`Delete ${name}?`)){\n    person.remove(id)\n    .then(()=>{\n      setPersons(persons.filter(person => person.id !== id));\n      setMessage(`Deleted ${name}`);\n      setType('info'); \n    });\n  }\n};\n\n\n  const handlename = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handlenumber = (event) => {\n    console.log(event.target.value)\n    setPhn(event.target.value)\n  }\n\n\n\n\n\n\n  return (\n    <div style=\"text-align: center;\">\n      <h1>phonebook</h1>\n      <Notification message={message} type={type} setMessage={setMessage} setType={setType} />\n      <div>\n        Search by name:<input value={searchName} \n        onChange={event=>setSearchName(event.target.value)}/>\n      </div>\n      <Form  addNote={addNote} newName={newName} handlename={handlename} handlenumber={handlenumber} focusName={focusName} Phonenumber={Phonenumber}></Form>\n     \n      <h3>Numbers</h3>\n      <Persons persons={persons} searchName={searchName} deletePerson={deletePerson} />\n    </div>\n  \n\n       \n    \n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}